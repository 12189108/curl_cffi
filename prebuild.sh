#!/usr/bin/env bash

set -ex

VERSION=0.5.3
CURL_VERSION=7.84
LIBDIR=/usr/local/lib

# download curl-impersonate, then extract to $LIBDIR.
if [ $(uname) == "Linux" ]; then
    # ls -al /etc/ssl/certs/../pki/tls/certs
    cp /etc/ssl/certs/ca-bundle.crt /etc/ssl/certs/ca-certificates.crt
    curl -C - -L -o /tmp/curl-impersonate.tar.gz \
        https://github.com/lwthiker/curl-impersonate/releases/download/v${VERSION}/libcurl-impersonate-v${VERSION}.$(arch)-linux-gnu.tar.gz
    tar -C $LIBDIR -xvzf /tmp/curl-impersonate.tar.gz
    rm $LIBDIR/libcurl-impersonate-ff*
elif [ $(uname) == "Darwin" ]; then
    # download mac intel binary
    curl -L -o /tmp/${ARCH}-${VERSION}.tar.gz \
        https://github.com/lwthiker/curl-impersonate/releases/download/v${VERSION}/libcurl-impersonate-v${VERSION}.${ARCH}-linux-gnu.tar.gz
    tar -C $LIBDIR/Linux-$arch -xvzf $LIBDIR/$arch-$VERSION.tar.gz
    rm $LIBDIR/libcurl-impersonate-ff*
    rm $LIBDIR/$arch/$VERSION.tar.gz
    # copy local mac m1 binary
fi

# TODO download curl automatically

# extract consts from curl.h
CONST_FILE=curl_cffi/_const.py
echo "# This file is automatically generated, do not modify it directly" > $CONST_FILE
echo "from enum import IntEnum" >> $CONST_FILE
echo "class CurlOpt(IntEnum):" >> $CONST_FILE
echo '#include "curl_cffi/include/curl/curl.h"'|gcc -E -|grep -i "CURLOPT_.\+ ="|sed "s/  CURLOPT_/\t/g"|sed "s/,//g" >> $CONST_FILE
# Handling opt renames
cat << EOF >> $CONST_FILE
	if locals().get("WRITEDATA"):
		FILE = locals().get("WRITEDATA")
	if locals().get("READDATA"):
		INFILE = locals().get("READDATA")
	if locals().get("HEADERDATA"):
		WRITEHEADER = locals().get("HEADERDATA")
EOF

echo "" >> $CONST_FILE
echo "" >> $CONST_FILE
echo "class CurlInfo(IntEnum):" >> $CONST_FILE
echo '#include "curl_cffi/include/curl/curl.h"'|gcc -E -|grep -i "CURLINFO_.\+ ="|sed "s/  CURLINFO_/\t/g"|sed "s/,//g" >> $CONST_FILE
# Handling info renames
cat << EOF >> $CONST_FILE
	if locals().get("RESPONSE_CODE"):
		HTTP_CODE = locals().get("RESPONSE_CODE")
EOF
